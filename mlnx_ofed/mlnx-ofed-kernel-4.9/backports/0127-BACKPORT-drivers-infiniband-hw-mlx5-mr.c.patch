From: Alaa Hleihel <alaa@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/infiniband/hw/mlx5/mr.c

Change-Id: I85f57d1c9a9c99008fab363c0b1325d006850522
---
 drivers/infiniband/hw/mlx5/mr.c | 33 ++++++++++++++++++++++++++++++---
 1 file changed, 30 insertions(+), 3 deletions(-)

--- a/drivers/infiniband/hw/mlx5/mr.c
+++ b/drivers/infiniband/hw/mlx5/mr.c
@@ -42,6 +42,9 @@
 #ifdef CONFIG_CXL_LIB
 #include <linux/sched/mm.h>
 #endif
+#ifndef ARCH_KMALLOC_MINALIGN
+#include <linux/crypto.h>
+#endif
 #include <rdma/ib_umem.h>
 #include <rdma/ib_umem_odp.h>
 #include <rdma/ib_verbs.h>
@@ -584,9 +587,17 @@ static void clean_keys(struct mlx5_ib_de
 	}
 }
 
+#ifdef HAVE_TIMER_SETUP
 static void delay_time_func(struct timer_list *t)
+#else
+static void delay_time_func(unsigned long ctx)
+#endif
 {
+#ifdef HAVE_TIMER_SETUP
 	struct mlx5_ib_dev *dev = from_timer(dev, t, delay_timer);
+#else
+	struct mlx5_ib_dev *dev = (struct mlx5_ib_dev *)ctx;
+#endif
 
 	dev->fill_delay = 0;
 }
@@ -606,7 +617,11 @@ int mlx5_mr_cache_init(struct mlx5_ib_de
 	}
 
 	mlx5_cmd_init_async_ctx(dev->mdev, &dev->async_ctx);
-	timer_setup(&dev->delay_timer, delay_time_func, 0);
+#ifdef HAVE_TIMER_SETUP
+       timer_setup(&dev->delay_timer, delay_time_func, 0);
+#else
+	setup_timer(&dev->delay_timer, delay_time_func, (unsigned long)dev);
+#endif
 	for (i = 0; i < MAX_MR_CACHE_ENTRIES; i++) {
 		ent = &cache->ent[i];
 		INIT_LIST_HEAD(&ent->head);
@@ -1703,7 +1718,11 @@ mlx5_alloc_priv_descs(struct ib_device *
 	int add_size;
 	int ret;
 
+#ifdef ARCH_KMALLOC_MINALIGN
 	add_size = max_t(int, MLX5_UMR_ALIGN - ARCH_KMALLOC_MINALIGN, 0);
+#else
+	add_size = max_t(int, MLX5_UMR_ALIGN - CRYPTO_MINALIGN, 0);
+#endif
 
 	mr->descs_alloc = kzalloc(size + add_size, GFP_KERNEL);
 	if (!mr->descs_alloc)
@@ -1774,7 +1793,7 @@ static void dereg_mr(struct mlx5_ib_dev
 {
 	int npages = mr->npages;
 	struct ib_umem *umem = mr->umem;
-
+#ifdef CONFIG_INFINIBAND_ON_DEMAND_PAGING
 	if (is_odp_mr(mr)) {
 		struct ib_umem_odp *umem_odp = to_ib_umem_odp(umem);
 
@@ -1808,7 +1827,7 @@ static void dereg_mr(struct mlx5_ib_dev
 		/* Avoid double-freeing the umem. */
 		umem = NULL;
 	}
-
+#endif
 	clean_mr(dev, mr);
 
 	if (!mr->allocated_from_cache) {
@@ -2794,7 +2813,11 @@ static ssize_t order_attr_store(struct k
 	return oa->store(co, oa, buf, size);
 }
 
+#ifdef CONFIG_COMPAT_IS_CONST_KOBJECT_SYSFS_OPS
 static const struct sysfs_ops order_sysfs_ops = {
+#else
+static struct sysfs_ops order_sysfs_ops = {
+#endif
 	.show = order_attr_show,
 	.store = order_attr_store,
 };
@@ -2932,7 +2955,11 @@ static ssize_t cache_attr_store(struct k
 	return ca->store(dev, buf, size);
 }
 
+#ifdef CONFIG_COMPAT_IS_CONST_KOBJECT_SYSFS_OPS
 static const struct sysfs_ops cache_sysfs_ops = {
+#else
+static struct sysfs_ops cache_sysfs_ops = {
+#endif
 	.show = cache_attr_show,
 	.store = cache_attr_store,
 };
