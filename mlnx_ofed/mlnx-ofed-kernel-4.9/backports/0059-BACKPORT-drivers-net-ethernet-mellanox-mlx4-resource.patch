From: Talat Batheesh <talatb@mellanox.com>
Subject: [PATCH] BACKPORT:
 drivers/net/ethernet/mellanox/mlx4/resource_tracker.c

Change-Id: I812cc5b746a0d9c9912425c36595bb0d89871671
---
 drivers/net/ethernet/mellanox/mlx4/resource_tracker.c | 18 ++++++++++++++++++
 1 file changed, 18 insertions(+)

--- a/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
+++ b/drivers/net/ethernet/mellanox/mlx4/resource_tracker.c
@@ -828,6 +828,7 @@ static int update_vport_qp_param(struct
 				MLX4_VLAN_CTRL_ETH_RX_BLOCK_UNTAGGED |
 				MLX4_VLAN_CTRL_ETH_RX_BLOCK_TAGGED;
 		} else if (0 != vp_oper->state.default_vlan) {
+#ifdef HAVE_NETIF_F_HW_VLAN_STAG_RX
 			if (vp_oper->state.vlan_proto == htons(ETH_P_8021AD)) {
 				/* vst QinQ should block untagged on TX,
 				 * but cvlan is in payload and phv is set so
@@ -839,11 +840,14 @@ static int update_vport_qp_param(struct
 					MLX4_VLAN_CTRL_ETH_RX_BLOCK_PRIO_TAGGED |
 					MLX4_VLAN_CTRL_ETH_RX_BLOCK_UNTAGGED;
 			} else { /* vst 802.1Q */
+#endif
 				qpc->pri_path.vlan_control |=
 					MLX4_VLAN_CTRL_ETH_TX_BLOCK_TAGGED |
 					MLX4_VLAN_CTRL_ETH_RX_BLOCK_PRIO_TAGGED |
 					MLX4_VLAN_CTRL_ETH_RX_BLOCK_UNTAGGED;
+#ifdef HAVE_NETIF_F_HW_VLAN_STAG_RX
 			}
+#endif
 		} else { /* priority tagged */
 			qpc->pri_path.vlan_control |=
 				MLX4_VLAN_CTRL_ETH_TX_BLOCK_TAGGED |
@@ -852,9 +856,11 @@ static int update_vport_qp_param(struct
 
 		qpc->pri_path.vlan_index = vp_oper->vlan_idx;
 		qpc->pri_path.fl |= MLX4_FL_ETH_HIDE_CQE_VLAN;
+#ifdef HAVE_NETIF_F_HW_VLAN_STAG_RX
 		if (vp_oper->state.vlan_proto == htons(ETH_P_8021AD))
 			qpc->pri_path.fl |= MLX4_FL_SV;
 		else
+#endif
 			qpc->pri_path.fl |= MLX4_FL_CV;
 		qpc->pri_path.feup |= MLX4_FEUP_FORCE_ETH_UP | MLX4_FVL_FORCE_ETH_VLAN | MLX4_FVL_RX_FORCE_ETH_VLAN;
 		qpc->pri_path.sched_queue &= 0xC7;
@@ -1870,7 +1876,11 @@ static int qp_alloc_res(struct mlx4_dev
 			return err;
 
 		if (!fw_reserved(dev, qpn)) {
+#ifdef HAVE_MEMALLOC_NOIO_SAVE
 			err = __mlx4_qp_alloc_icm(dev, qpn);
+#else
+			err = __mlx4_qp_alloc_icm(dev, qpn, GFP_KERNEL);
+#endif
 			if (err) {
 				res_abort_move(dev, slave, RES_QP, qpn);
 				return err;
@@ -1957,7 +1967,11 @@ static int mpt_alloc_res(struct mlx4_dev
 		if (err)
 			return err;
 
+#ifdef HAVE_MEMALLOC_NOIO_SAVE
 		err = __mlx4_mpt_alloc_icm(dev, mpt->key);
+#else
+		err = __mlx4_mpt_alloc_icm(dev, mpt->key, GFP_KERNEL);
+#endif
 		if (err) {
 			res_abort_move(dev, slave, RES_MPT, id);
 			return err;
@@ -5761,11 +5775,13 @@ void mlx4_vf_immed_vlan_work_handler(str
 	else if (!work->vlan_id)
 		vlan_control = MLX4_VLAN_CTRL_ETH_TX_BLOCK_TAGGED |
 			MLX4_VLAN_CTRL_ETH_RX_BLOCK_TAGGED;
+#ifdef HAVE_NETIF_F_HW_VLAN_STAG_RX
 	else if (work->vlan_proto == htons(ETH_P_8021AD))
 		vlan_control = MLX4_VLAN_CTRL_ETH_TX_BLOCK_PRIO_TAGGED |
 			MLX4_VLAN_CTRL_ETH_TX_BLOCK_TAGGED |
 			MLX4_VLAN_CTRL_ETH_RX_BLOCK_PRIO_TAGGED |
 			MLX4_VLAN_CTRL_ETH_RX_BLOCK_UNTAGGED;
+#endif
 	else  /* vst 802.1Q */
 		vlan_control = MLX4_VLAN_CTRL_ETH_TX_BLOCK_TAGGED |
 			MLX4_VLAN_CTRL_ETH_RX_BLOCK_PRIO_TAGGED |
@@ -5809,9 +5825,11 @@ void mlx4_vf_immed_vlan_work_handler(str
 				upd_context->qp_context.pri_path.vlan_index = work->vlan_ix;
 				upd_context->qp_context.pri_path.fl =
 					qp->pri_path_fl | MLX4_FL_ETH_HIDE_CQE_VLAN;
+#ifdef HAVE_NETIF_F_HW_VLAN_STAG_RX
 				if (work->vlan_proto == htons(ETH_P_8021AD))
 					upd_context->qp_context.pri_path.fl |= MLX4_FL_SV;
 				else
+#endif
 					upd_context->qp_context.pri_path.fl |= MLX4_FL_CV;
 				upd_context->qp_context.pri_path.feup =
 					qp->feup | MLX4_FEUP_FORCE_ETH_UP | MLX4_FVL_FORCE_ETH_VLAN | MLX4_FVL_RX_FORCE_ETH_VLAN;
