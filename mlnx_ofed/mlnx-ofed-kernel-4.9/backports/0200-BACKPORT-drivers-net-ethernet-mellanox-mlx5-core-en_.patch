From: Talat Batheesh <talatb@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/net/ethernet/mellanox/mlx5/core/en_tc.h

Change-Id: I2ae58906dd10b4d56f33216d5a3abf516fc8797c
---
 .../net/ethernet/mellanox/mlx5/core/en_tc.h   | 27 +++++++++++++++++++
 1 file changed, 27 insertions(+)

--- a/drivers/net/ethernet/mellanox/mlx5/core/en_tc.h
+++ b/drivers/net/ethernet/mellanox/mlx5/core/en_tc.h
@@ -34,8 +34,12 @@
 #define __MLX5_EN_TC_H__
 
 #include <net/pkt_cls.h>
+#ifdef HAVE_TCF_TUNNEL_INFO
 #include <net/ip_tunnels.h>
+#endif
+#if defined(HAVE_KERNEL_WITH_VXLAN_SUPPORT_ON)
 #include <net/vxlan.h>
+#endif
 #include "eswitch.h"
 
 #define MLX5E_TC_FLOW_ID_MASK 0x0000ffff
@@ -70,12 +74,15 @@ enum {
 	MLX5E_TC_FLOW_FLAG_CT_ORIG      = MLX5E_TC_FLOW_BASE + 9,
 };
 
+#ifdef HAVE_TC_FLOWER_OFFLOAD
 #define MLX5E_TC_MAX_SPLITS 1
 
 struct mlx5_nic_flow_attr {
 	u32 action;
 	u32 flow_tag;
+#ifdef HAVE_TCF_PEDIT_TCFP_KEYS_EX
 	struct mlx5_modify_hdr *modify_hdr;
+#endif
 	u32 hairpin_tirn;
 	u8 match_level;
 	struct mlx5_flow_table	*hairpin_ft;
@@ -118,7 +125,9 @@ struct mlx5e_tc_flow {
 	struct encap_flow_item encaps[MLX5_MAX_FLOW_FWD_VPORTS];
 	struct mlx5e_tc_flow    *peer_flow;
 	struct mlx5e_mod_hdr_entry *mh; /* attached mod header instance */
+#ifdef HAVE_TCF_PEDIT_TCFP_KEYS_EX
 	struct list_head	mod_hdr; /* flows sharing the same mod hdr ID */
+#endif
 	struct mlx5e_hairpin_entry *hpe; /* attached hairpin instance */
 	struct list_head	hairpin; /* flows sharing the same hairpin */
 	struct list_head	peer;    /* flows with peer flow */
@@ -145,15 +154,20 @@ struct mlx5e_tc_flow {
 };
 
 struct mlx5e_tc_flow_parse_attr {
+#ifdef HAVE_TCF_TUNNEL_INFO
 	const struct ip_tunnel_info *tun_info[MLX5_MAX_FLOW_FWD_VPORTS];
 	struct ip_tunnel_info tun_info2[MLX5_MAX_FLOW_FWD_VPORTS];
+#endif
 	struct net_device *filter_dev;
 	struct mlx5_flow_spec spec;
+#ifdef HAVE_TCF_PEDIT_TCFP_KEYS_EX
 	int num_mod_hdr_actions;
 	int max_mod_hdr_actions;
 	void *mod_hdr_actions;
+#endif
 	int mirred_ifindex[MLX5_MAX_FLOW_FWD_VPORTS];
 };
+#endif /* HAVE_TC_FLOWER_OFFLOAD */
 
 #define MLX5_MH_ACT_SZ MLX5_UN_SZ_BYTES(set_add_copy_action_in_auto)
 
@@ -178,13 +192,18 @@ void mlx5e_tc_nic_cleanup(struct mlx5e_p
 int mlx5e_tc_esw_init(struct mlx5e_priv *priv);
 void mlx5e_tc_esw_cleanup(struct mlx5e_priv *priv);
 
+#ifdef HAVE_TC_FLOWER_OFFLOAD
 int mlx5e_configure_flower(struct net_device *dev, struct mlx5e_priv *priv,
 			   struct tc_cls_flower_offload *f, unsigned long flags);
 int mlx5e_delete_flower(struct net_device *dev, struct mlx5e_priv *priv,
 			struct tc_cls_flower_offload *f, unsigned long flags);
 
+#ifdef HAVE_TC_CLSFLOWER_STATS
 int mlx5e_stats_flower(struct net_device *dev, struct mlx5e_priv *priv,
 		       struct tc_cls_flower_offload *f, unsigned long flags);
+#endif
+
+#ifdef HAVE_TCF_TUNNEL_INFO
 
 struct mlx5e_encap_entry;
 void mlx5e_tc_encap_flows_add(struct mlx5e_priv *priv,
@@ -201,6 +220,7 @@ void mlx5e_put_encap_flow_list(struct ml
 
 struct mlx5e_neigh_hash_entry;
 void mlx5e_tc_update_neigh_used_value(struct mlx5e_neigh_hash_entry *nhe);
+#endif
 
 int mlx5e_tc_num_filters(struct mlx5e_priv *priv, unsigned long flags);
 
@@ -216,6 +236,7 @@ void mlx5e_flow_put_lock(struct mlx5e_pr
 int mlx5e_tc_add_fdb_flow(struct mlx5e_priv *priv,
 			  struct mlx5e_tc_flow *flow,
 			  struct netlink_ext_ack *extack);
+
 int mlx5e_alloc_flow(struct mlx5e_priv *priv, int attr_size,
 		     u64 cookie, unsigned long flow_flags, gfp_t flags,
 		     struct mlx5e_tc_flow_parse_attr **__parse_attr,
@@ -238,6 +259,12 @@ int alloc_tc_pedit_action(struct mlx5e_p
 bool mlx5e_is_valid_eswitch_fwd_dev(struct mlx5e_priv *priv,
 				    struct net_device *out_dev);
 
+#if !defined(HAVE_SWITCHDEV_PORT_SAME_PARENT_ID)
+bool switchdev_port_same_parent_id(struct net_device *a,
+				   struct net_device *b);
+#endif
+
+#endif /* HAVE_TC_FLOWER_OFFLOAD */
 #else /* CONFIG_MLX5_ESWITCH */
 static inline int  mlx5e_tc_nic_init(struct mlx5e_priv *priv) { return 0; }
 static inline void mlx5e_tc_nic_cleanup(struct mlx5e_priv *priv) {}
