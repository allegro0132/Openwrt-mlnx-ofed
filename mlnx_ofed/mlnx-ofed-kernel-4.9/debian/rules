#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# This file was originally written by Joey Hess and Craig Small.
# As a special exception, when this file is copied by dh-make into a
# dh-make output file, you may use that output file without restriction.
# This special exception was added by Craig Small in version 0.37 of dh-make.
#
# This version is for a hypothetical package that can build a kernel modules
# architecture-dependant package via make-kpkg, as well as an
# architecture-independent module source package, and other packages
# either dep/indep for things like common files or userspace components
# needed for the kernel modules.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

WITH_DKMS ?= 1
MLXNUMC = $(shell grep ^processor /proc/cpuinfo | wc -l)
NJOBS ?= $(shell if [ $(MLXNUMC) -lt 16 ]; then echo $(MLXNUMC); else echo 16; fi)

PYTHON = $(shell for i in "" 3 2; do if [ -x /usr/bin/python$$i ]; then echo python$$i; break; fi; done)

pname:=mlnx-ofed-kernel
psource:=$(pname)-source
ifeq ($(WITH_DKMS),1)
pdkms:=$(pname)-dkms
else
pdkms:=$(pname)-modules
endif
putils:=$(pname)-utils

pversion := $(shell dpkg-parsechangelog | sed -n 's/^Version: *\([^-]\+\)-.\+/\1/p')
prel := $(shell dpkg-parsechangelog | sed -n 's/^Version: *\([^-]\+\)-\(.\+\)/\2/p')

export INSTALL_MOD_DIR:=updates
export INSTALL_MOD_PATH:=$(CURDIR)/debian/$(pdkms)

DIST_NAME := $(shell lsb_release -si)
DIST_RELEASE := $(DIST_NAME)/$(shell lsb_release -sc)

kernelver ?= $(shell uname -r)
kernelver1 = $(shell echo $(kernelver) | sed -e 's/_/-/g')
kernel_source_dir ?= "/lib/modules/$(kernelver)/build"

%:
ifeq ($(WITH_DKMS),1)
	dh $@ --with dkms
else
	dh $@
endif

override_dh_auto_clean:

override_dh_auto_configure:
	# backup clean sources
	/bin/rm -rf source || true
	mkdir -p source
	ls -1 | grep -v source | xargs -iELEM cp ELEM -r source
ifneq ($(WITH_DKMS),1)
	@echo Building for $(kernelver)
	find compat -type f -exec touch -t 200012201010 '{}' \; || true
	$(CURDIR)/configure --kernel-version=$(kernelver) --kernel-sources=$(kernel_source_dir) $(shell $(CURDIR)/ofed_scripts/dkms_ofed $(kernelver) $(kernel_source_dir) get-config) --with-njobs=$(NJOBS)
endif

override_dh_auto_build:
ifneq ($(WITH_DKMS),1)
	make distclean || true
	make -j$(NJOBS)
endif
override_dh_auto_test:

override_dh_auto_install:
ifneq ($(WITH_DKMS),1)
	make install_modules INSTALL_MOD_DIR=$(INSTALL_MOD_DIR) INSTALL_MOD_PATH=$(INSTALL_MOD_PATH) KERNELRELEASE=$(kernelver)
	find $(INSTALL_MOD_PATH) \( -type f -a -name "modules.*" \) -delete
endif

	# For dkms
	dh_installdirs -p$(pdkms)  usr/src/$(pname)-$(pversion)
	cp -a source/compat*		debian/$(pdkms)/usr/src/$(pname)-$(pversion)
	cp -a source/include		debian/$(pdkms)/usr/src/$(pname)-$(pversion)
	cp -a source/drivers		debian/$(pdkms)/usr/src/$(pname)-$(pversion)
	cp -a source/net		debian/$(pdkms)/usr/src/$(pname)-$(pversion)
	cp -a source/block		debian/$(pdkms)/usr/src/$(pname)-$(pversion)
	cp -a source/backports		debian/$(pdkms)/usr/src/$(pname)-$(pversion) || true
	cp source/backports_applied	debian/$(pdkms)/usr/src/$(pname)-$(pversion) || true
	cp -a source/ofed_scripts	debian/$(pdkms)/usr/src/$(pname)-$(pversion)
	cp -a source/COPYING		debian/$(pdkms)/usr/src/$(pname)-$(pversion)
	$(CURDIR)/ofed_scripts/generate_dkms_conf.sh > debian/$(pdkms)/usr/src/$(pname)-$(pversion)/dkms.conf
	cd debian/$(pdkms)/usr/src/$(pname)-$(pversion); ln -s ofed_scripts/configure
	cd debian/$(pdkms)/usr/src/$(pname)-$(pversion); ln -s ofed_scripts/makefile
	cd debian/$(pdkms)/usr/src/$(pname)-$(pversion); ln -s ofed_scripts/Makefile
	cd debian/$(pdkms)/usr/src; ln -snf $(pname)-$(pversion) ofa_kernel-$(pversion)
	#
	# Sources for building stuff over MLNX_OFED
	#
	# With DKMS, copy the below files and folders during post_build since the
	# new DKMS versions started to remove the whole build directory.
	# however, some old versions of DKMS are buggy and ignores POST_BUILD
ifeq ($(WITH_DKMS),1)
	dh_installdirs -p$(pdkms)  usr/src/ofa_kernel/
	# copy the ofa-kernel build headers using ofed_scripts/pre_build.sh in the DKMS MAKE step (called from ofed_scripts/pre_build.sh).
else
	dh_installdirs -p$(pdkms)  usr/src/ofa_kernel/default
	cp -ar include/			debian/$(pdkms)/usr/src/ofa_kernel/default/
	cp -ar config*			debian/$(pdkms)/usr/src/ofa_kernel/default/
	cp -ar compat*			debian/$(pdkms)/usr/src/ofa_kernel/default/
	cp -ar ofed_scripts		debian/$(pdkms)/usr/src/ofa_kernel/default/
	cp -ar Module*.symvers		debian/$(pdkms)/usr/src/ofa_kernel/default/
endif

	# Force DKMS to install our modules.
	# This is mostly needed for modules that do not have a version number info, as DKMS
	# will compare their srcversion field, which does not really say which module is newer.
ifeq ($(WITH_DKMS),1)
	dh_installdirs -p$(pdkms)  usr/share/dkms/modules_to_force_install/
	echo "$(pname)" > debian/$(pdkms)/usr/share/dkms/modules_to_force_install/$(pname).force
endif

	# For utils
	dh_installdirs -p$(putils)  etc/infiniband
	dh_installdirs -p$(putils)  etc/modprobe.d
	dh_installdirs -p$(putils)  sbin
	dh_installdirs -p$(putils)  bin
	dh_installdirs -p$(putils)  usr/bin
	dh_installdirs -p$(putils)  usr/sbin
	dh_installdirs -p$(putils)  etc/udev/rules.d
	dh_installdirs -p$(putils)  etc/init.d
	dh_installdirs -p$(putils)  etc/init
	dh_installdirs -p$(putils)  usr/share/doc/ib2ib

	cp source/ofed_scripts/openib.conf debian/$(putils)/etc/infiniband
	cp source/ofed_scripts/mlx5.conf   debian/$(putils)/etc/infiniband
ifneq ($(WITH_DKMS),1)
	$(CURDIR)/ofed_scripts/install_helper $(CURDIR)/debian/$(putils)
endif

	install -m 0644 source/ofed_scripts/90-ib.rules   debian/$(putils)/etc/udev/rules.d
	install -m 0644 source/ofed_scripts/82-net-setup-link.rules   debian/$(putils)/etc/udev/rules.d
	$(CURDIR)/ofed_scripts/deb_service_install_helper $(CURDIR)/debian/$(putils)

	# Prepare /etc/infiniband/info
	echo '#!/bin/bash'						> debian/$(putils)/etc/infiniband/info
	echo								>> debian/$(putils)/etc/infiniband/info
	echo 'echo prefix=/usr'						>> debian/$(putils)/etc/infiniband/info
	echo 'echo Kernel=`uname -r`'					>> debian/$(putils)/etc/infiniband/info
	echo 'echo'							>> debian/$(putils)/etc/infiniband/info
	echo 'echo "Configure options: `/usr/src/$(pname)-$(pversion)/ofed_scripts/dkms_ofed $(kernelver) $(kernel_source_dir) get-config`"'	>> debian/$(putils)/etc/infiniband/info
	echo 'echo'							>> debian/$(putils)/etc/infiniband/info
	chmod 755 debian/$(putils)/etc/infiniband/info

	install -m 0755 source/ofed_scripts/vf-net-link-name.sh		debian/$(putils)/etc/infiniband
	install -m 0755 source/ofed_scripts/sysctl_perf_tuning		debian/$(putils)/sbin
	install -m 0755 source/ofed_scripts/mlnx_bf_configure		debian/$(putils)/sbin
	install -m 0755 source/ofed_scripts/mlnx-sf			debian/$(putils)/sbin
	install -m 0755 source/ofed_scripts/mlnx_tune			debian/$(putils)/usr/sbin
	install -m 0755 source/ofed_scripts/show_gids			debian/$(putils)/usr/sbin
	install -m 0755 source/ofed_scripts/compat_gid_gen			debian/$(putils)/usr/sbin
	install -m 0755 source/ofed_scripts/cma_roce_mode			debian/$(putils)/usr/sbin
	install -m 0755 source/ofed_scripts/cma_roce_tos			debian/$(putils)/usr/sbin
	install -m 0755 source/ofed_scripts/connectx_port_config	debian/$(putils)/sbin
	install -m 0755 source/ofed_scripts/net-interfaces		debian/$(putils)/usr/sbin
	install -m 0755 source/ofed_scripts/*affinity*			debian/$(putils)/usr/sbin
	install -m 0755 source/ofed_scripts/ibdev2netdev		debian/$(putils)/usr/bin
	install -m 0644 source/ofed_scripts/mlnx-ofed-kernel-utils.openibd.upstart	debian/$(putils)/etc/init/openibd.conf
	install -m 0755 source/ofed_scripts/mlnx-ofed-kernel-utils.openibd.init	debian/$(putils)/etc/init.d/openibd
	install -m 0644 source/ofed_scripts/mlnx.conf			debian/$(putils)/etc/modprobe.d
	install -m 0644 source/ofed_scripts/mlnx-bf.conf	debian/$(putils)/etc/modprobe.d
	install -m 0644 source/ofed_scripts/ib_ipoib.conf		debian/$(putils)/etc/modprobe.d
	install -m 0755 source/ofed_scripts/mlnx_interface_mgr_deb.sh	debian/$(putils)/bin/mlnx_interface_mgr.sh
	install -m 0755 source/ofed_scripts/mlnx_conf_mgr.sh		debian/$(putils)/bin/
	install -m 0755 source/ofed_scripts/ib2ib/ib2ib*		debian/$(putils)/usr/sbin
	install -m 0644 source/ofed_scripts/ib2ib/README		debian/$(putils)/usr/share/doc/ib2ib
	install -m 0755 source/ofed_scripts/setup_mr_cache.sh		debian/$(putils)/usr/sbin
	install -m 0755 source/ofed_scripts/odp_stat.sh			debian/$(putils)/usr/sbin
	install -m 0755 source/ofed_scripts/show_counters		debian/$(putils)/usr/sbin

	cd ofed_scripts/utils;	$(PYTHON) ./setup.py install --install-layout=deb --root=../../debian/$(putils)

override_dh_installinit:


ifneq ($(WITH_DKMS),1)
override_dh_gencontrol:
	dh_gencontrol -- -v$(pversion)-$(prel).kver.$(kernelver1)
endif

override_dh_installdeb:
	dh_installdeb
	# override conf files list
	echo "/etc/infiniband/openib.conf"    >   debian/$(putils)/DEBIAN/conffiles
	echo "/etc/infiniband/mlx5.conf"      >>   debian/$(putils)/DEBIAN/conffiles
	echo "/etc/modprobe.d/mlnx.conf"      >>  debian/$(putils)/DEBIAN/conffiles
	echo "/etc/modprobe.d/mlnx-bf.conf"      >>  debian/$(putils)/DEBIAN/conffiles
	echo "/etc/modprobe.d/ib_ipoib.conf"  >>  debian/$(putils)/DEBIAN/conffiles

ifneq ($(MLNX_KO_NO_STRIP),1)
ifneq ($(WITH_DKMS),1)
override_dh_strip:
	dh_strip
	find debian -name '*.ko' | xargs strip -g
endif
endif
